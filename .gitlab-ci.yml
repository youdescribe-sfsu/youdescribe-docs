variables:
  CI_PROJECT_NAME: youdescribe-docs
  DOCKER_REGISTRY: youdescribe
  S3_BUCKET: youdescribexci
  S3_PATH: youdescribe-docs
  CI_REGISTRY: docker.io
  TAR_FILE_NAME: "youdescribe-docs.tar"
  TAR_FILE_FOLDER: ".docker"
  TAR_FILE_PATH: "/"


stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/

build-prod:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  stage: build
  tags:
    - saas-linux-large-amd64 
    # - prod
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
  before_script:
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo "Building YouDescribe Docs"
    - docker build -t "${DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}.${CI_PIPELINE_ID}" .
    - echo "Pushing the new image to Docker registry"
    - docker push ${DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}.${CI_PIPELINE_ID}
    - echo "Build complete"


deploy-prod:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  tags:
    - saas-linux-large-amd64 
    # - prod
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
  # before_script:
    # - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo "Logging into Docker registry"
    # - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $DOCKER_REGISTRY
    # - echo "Pushing the new image to Docker registry"
    # - docker load -q -i "$TAR_FILE_FOLDER""$TAR_FILE_PATH""$TAR_FILE_NAME"
    # - docker push ${DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}.${CI_PIPELINE_ID}
    - sed -i "s/\${CI_PROJECT_NAME}/$CI_PROJECT_NAME/g" docker_compose_service.yml
    - sed -i "s/\${CI_COMMIT_REF_NAME}/$CI_COMMIT_REF_NAME/g" docker_compose_service.yml
    - sed -i "s/\${CI_PIPELINE_ID}/$CI_PIPELINE_ID/g" docker_compose_service.yml
    - cat docker_compose_service.yml  # Display the modified file for verification
    - echo "Updating S3 bucket with the new Docker image"
    - aws s3 cp s3://${S3_BUCKET}/${S3_PATH}/docker_compose_service.yml docker_compose_service.yml
