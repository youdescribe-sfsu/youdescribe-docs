variables:
  CI_PROJECT_NAME: youdescribe-docs
  DOCKER_REGISTRY: youdescribe
  S3_BUCKET: youdescribexci
  S3_PATH: youdescribe-docs
  CI_REGISTRY: docker.io
  TAR_FILE_NAME: "youdescribe-docs.tar"
  TAR_FILE_FOLDER: ".docker"
  TAR_FILE_PATH: "/"
  DOCKER_IMAGE_TAG: "${DOCKER_REGISTRY}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_NAME}.${CI_PIPELINE_ID}"

stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/

build-prod:
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  stage: build
  tags:
    - saas-linux-large-amd64
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: always
  before_script:
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo "Building YouDescribe Docs"
    - docker build -t "$DOCKER_IMAGE_TAG" .
    - echo "Pushing the new image to Docker registry"
    - docker push "$DOCKER_IMAGE_TAG"
    - echo "Build complete"

deploy-prod:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  tags:
    - saas-linux-small-amd64
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
  script:
    - echo "Logging into Docker registry"
    - sed -i "s/#DOCKER_IMAGE_TAG/${DOCKER_IMAGE_TAG}/" docker_compose_service.yml
    - cat docker_compose_service.yml  # Display the modified file for verification
    - echo "Updating S3 bucket with the new Docker image"
    - aws s3 cp docker_compose_service.yml "s3://${S3_BUCKET}/${S3_PATH}/docker_compose_service.yml"
